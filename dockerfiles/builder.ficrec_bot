# syntax = docker/dockerfile:1.0-experimental
FROM builder:base2 AS bot_build
SHELL ["bash", "-l", "-c"]

ARG THREAD_COUNT=12

# создаём общие директории
ENV PACKAGE_DIR /build/downloads
ENV BUILD_DIR /build/tmp
ENV TARGET_DIR /build/libs
ENV INCLUDES_DIR /build/includes

RUN mkdir -p $PACKAGE_DIR $BUILD_DIR $TARGET_DIR

ARG GRPC_PLUGIN=/usr/local/bin/grpc_cpp_plugin
ARG LD_LIBRARY_PATH=/build/libs/grpc-1.30.2/lib::${LD_LIBRARY_PATH}
ARG LIBNAME_PROTOBUF=protobuf
ARG LINK_SSL=0
ARG LINK_ZLIB=0
ARG NO_AT_BRIDGE=1
ARG PATH=${PATH}
ARG PROTOC=/build/libs/grpc-1.30.2/bin/protoc
ARG SQLITE_FOLDER=/build/libs
ARG USE_ADDRESS_SORTING=1
ARG USE_PRECOMPILED_HEADER=0
ARG ZLIB_DEPENDENCIES=zlib,cares,crypto

ENV GRPC_PLUGIN {$GRPC_PLUGIN}
ENV LD_LIBRARY_PATH $LD_LIBRARY_PATH 
ENV LIBNAME_PROTOBUF $LIBNAME_PROTOBUF
ENV LINK_SSL  $LINK_SSL
ENV LINK_ZLIB  $LINK_ZLIB
ENV NO_AT_BRIDGE $NO_AT_BRIDGE
ENV PATH  $PATH
ENV PROTOC $PROTOC
ENV SQLITE_FOLDER $SQLITE_FOLDER
ENV USE_ADDRESS_SORTING $USE_ADDRESS_SORTING
ENV USE_PRECOMPILED_HEADER $USE_ADDRESS_SORTING
ENV ZLIB_DEPENDENCIES $ZLIB_DEPENDENCIES
ENV CPLUS_INCLUDE_PATH=/build/libs/grpc-1.30.2/include
ENV C_INCLUDE_PATH=/build/libs/grpc-1.30.2/include

RUN   apt-get -y install git cmake ninja-build libssl-dev curl libcurl4-openssl-dev
ARG CACHEBUSTER_SLEEPY
RUN --mount=type=ssh \
    cd $PACKAGE_DIR  \ 
    && git clone https://github.com/Zeks/flipper.git   \ 
    && cd flipper \
    && git checkout master \
    && git submodule update --init \
    && cd third_party/sleepy-discord \
    && mkdir build \
    && cd build \
    && cmake .. -G "Ninja" \ 
    && ninja  \
    && cp sleepy_discord/libsleepy-discord.a /usr/lib \ 
    && cp lib/libcpr.a /usr/lib/libcpr.a \
    && cd ../../../ 

ARG CACHEBUSTER
ARG BRANCH

RUN --mount=type=cache,target=/root/.cache/qbs \
    cd $PACKAGE_DIR/flipper  \ 
    && git fetch origin \
    && git checkout $BRANCH \
    && git pull origin $BRANCH \
    && git submodule update --init \
    && qbs build -d build/bot  -f discord_proj.qbs qbs.defaultBuildVariant:release profile:defaultqt

RUN cd $PACKAGE_DIR/flipper  \
    && chmod +x shell/deploy_bot.sh \
    && shell/deploy_bot.sh

FROM ubuntu:20.10 as bot_runner
SHELL ["bash", "-l", "-c"]
RUN apt-get update && apt-get -y install curl libssl-dev \
 && echo 'openssl_conf = default_conf' > /etc/ssl/openssl.cnf \
   &&  echo '[ default_conf ]' >> /etc/ssl/openssl.cnf \
   &&  echo 'ssl_conf = ssl_sect' >> /etc/ssl/openssl.cnf \
   &&  echo '[ssl_sect]' >> /etc/ssl/openssl.cnf \
   &&  echo 'system_default = system_default_sect' >> /etc/ssl/openssl.cnf \
   &&  echo '[system_default_sect]' >> /etc/ssl/openssl.cnf \
   &&  echo 'MinProtocol = TLSv1.2' >> /etc/ssl/openssl.cnf \
   &&  echo 'CipherString = DEFAULT:@SECLEVEL=1' >> /etc/ssl/openssl.cnf 

RUN mkdir /tmp/faves 

 
WORKDIR /root/
COPY --from=bot_build /build/downloads/flipper/deployment .
ENV LD_LIBRARY_PATH=/root/libs:$LD_LIBRARY_PATH
RUN chmod +x scripts/page_fixer.sh
RUN chmod +x discord
CMD ["./discord"]  
